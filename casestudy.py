# -*- coding: utf-8 -*-
"""CaseStudy.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1s1GV8Az1OzOolbaHMwjz5hfOpbLStMEF
"""

#Import necessary libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.impute import SimpleImputer
from sklearn.preprocessing import LabelEncoder, OneHotEncoder, StandardScaler

"""1.Exploratory Data Analysis (EDA):

---


"""

#Read dataset using pandas
df = pd.read_excel("Talent_Academy_Case_DT_2025.xlsx")

#Examine dataset
print("Number of rows and columns: " , df.shape)

df.head()

#Information about the dataset
print(df.info())

#See the distribution of the dataset
print(df.describe())

#Missing values
df.isnull().sum()

missing_values = df.isnull().sum()

missing_values = missing_values[missing_values>0]

#Visualize Missing Values
plt.figure(figsize=(10,5))
missing_values.plot(kind="bar", color="salmon", edgecolor="black")
plt.title("Missing Value per Columns")
plt.xlabel("Columns")
plt.ylabel("Number of Missing Values")
plt.show()

#Visualize Missing Values
plt.figure(figsize=(12,6))
sns.heatmap(df.isnull(), cbar=False, cmap="viridis")
plt.title("Heatmap of Missing Values")
plt.xlabel("Columns")
plt.ylabel("Rows")
plt.show()

"""2.Data Pre-Processing:

---


"""

#Convert target column to integer
df["TedaviSuresi"] = df["TedaviSuresi"].str.split().str[0].astype(int)

df["UygulamaSuresi"] = df["UygulamaSuresi"].str.split().str[0].astype(int)

#Handling with missing values

#The columns that filled with Mode
mode_columns = ["Cinsiyet", "KanGrubu","Bolum","UygulamaYerleri"]

#The columns that filled with "unknown"
unknown_columns = ["KronikHastalik", "Alerji","Tanilar"]

#SimpleImputer

mode_imputer = SimpleImputer(strategy="most_frequent")
df[mode_columns] = pd.DataFrame(
    mode_imputer.fit_transform(df[mode_columns]),
    columns=mode_columns,
    index=df.index
)

unknown_imputer = SimpleImputer(strategy="constant", fill_value="Bilinmiyor")
df[unknown_columns] = pd.DataFrame(
    unknown_imputer.fit_transform(df[unknown_columns]),
    columns=unknown_columns,
    index=df.index
)

#Check is all NaN's are filled
df.isnull().sum()

#Encoding
#1-Label Encoder
label_encoded = LabelEncoder()
df["Cinsiyet"] = label_encoded.fit_transform(df["Cinsiyet"])

df.head()

#2-One Hot Encoder
ohe = OneHotEncoder(sparse_output=False)
columns = ["KanGrubu", "Uyruk","Bolum","UygulamaYerleri"]
encoded_array = ohe.fit_transform(df[columns])

df_encoded = pd.DataFrame(
    encoded_array,
    columns=ohe.get_feature_names_out(columns),
    index=df.index
)
df = pd.concat([df, df_encoded],axis=1)

print(df.columns)

#Standardize numeric columns
num_cols = ["Yas", "UygulamaSuresi"]
scaler = StandardScaler()
df[num_cols] = scaler.fit_transform(df[num_cols])